@model BugTracker.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Bug Tracker</h1>
    <p>A web application that allows employees to submit tickets in relation to a problem/issue within the company. <br />The administrator, or perspective managers, then have the ability to assign, modify and address the tasks at hand.</p>
</div>


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col">
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- Small boxes (Stat box) -->
            <div class="row">
                <div class="col">
                    <!-- small box -->
                    <div class="small-box bg-info">
                        <div class="inner">

                            <p>New Tickets</p>
                            <p>@Model.Tickets.Where(t => t.TicketStatus.Name == "New").Count()</p>
                        </div>
                        @*<div class="icon">
                                <i class="ion ion-bag"></i>
                            </div>*@
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col">
                    <!-- small box -->
                    <div class="small-box bg-success">
                        <div class="inner">

                            <p>Resolved Tickets</p>
                            <p>@Model.Tickets.Where(t => t.TicketStatus.Name == "Closed").Count()</p>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col">
                    <!-- small box -->
                    <div class="small-box bg-warning">
                        <div class="inner">

                            <p>High Priority</p>
                            <p>@Model.Tickets.Where(t => t.TicketPriority.Name == "High").Count()</p>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col">
                    <!-- small box -->
                    <div class="small-box bg-danger">
                        <div class="inner">

                            <p>Urgent Priority</p>
                            <p>@Model.Tickets.Where(t => t.TicketPriority.Name == "Urgent").Count()</p>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
            </div>
            <!-- /.row -->
            <!-- Main row -->
            <div class="row">

                <!-- right col (We are only adding the ID to make the widgets sortable)-->
                <section class="col connectedSortable">
                    <!-- Tickets-->
                    <div class="card">
                        <div class="card-header border-0">
                            <h3 class="card-title">Projects</h3>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Company</th>
                                        <th>Team Members</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var project in Model.Projects)
                                    {
                                        <tr>
                                            <td>@project.Name</td>
                                            <td>@project.Description</td>
                                            <td>@project.Company.Name</td>
                                            <td>
                                                @foreach (var member in project.Members)
                                                {
                                                    <p>@member.FullName</p>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                    <!-- /.card -->

                </section>
                <!-- right col -->
            </div>
            <!-- /.row (main row) -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>




<div class="row">
    <div class="col-md-8">
        <canvas id="myChart" width="400" height="400"></canvas>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <canvas id="myChart2" width="400" height="400"></canvas>
    </div>
</div>


@section Scripts {


    <script>
    var Url3 = '@Url.Action("PriorityChart", "Charts")';
    $.post(Url3).then(function (response) {
        var ctx = document.getElementById('myChart').getContext('2d');
        var barChartData = {
            labels: response.labels,
            datasets: [{
                label: "Status",
                data: response.data,
                backgroundColor: response.backgroundColors,
                hoverOffset: 4
            }]
        };
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: barChartData
        })
    })

        var Url2 = '@Url.Action("StatusChart", "Charts")';
    $.post(Url2).then(function (response) {
        var ctx = document.getElementById('myChart2').getContext('2d');
        var doughnutChartData = {
            labels: response.labels,
            datasets: [{
                label: "Status",
                data: response.data,
                backgroundColor: response.backgroundColors,
                hoverOffset: 4
            }]
        };
        var myChart2 = new Chart(ctx, {
            type: 'doughnut',
            data: doughnutChartData
        })
    })
    </script>
}

